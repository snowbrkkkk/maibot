import discord
from discord.ext import commands
from discord.ui import Button, View
import os
import re

intents = discord.Intents.default()
intents.message_content = True

bot = commands.Bot(command_prefix='!', intents=intents)

class DynamicButtonView(View):
    def __init__(self, button_label: str, response_text: str):
        super().__init__(timeout=None)
        self.response_text = response_text
        
        button = Button(label=button_label, style=discord.ButtonStyle.primary)
        button.callback = self.button_callback
        self.add_item(button)
    
    async def button_callback(self, interaction: discord.Interaction):
        await interaction.response.send_message(
            self.response_text,
            ephemeral=True
        )

@bot.event
async def on_ready():
    print(f'Bot conectado como {bot.user}')
    print(f'ID: {bot.user.id}')
    print('Pronto para enviar mensagens!')
    print('------')

@bot.command(name='sendmessage')
async def send_message(ctx, channel: discord.TextChannel, *, content: str):
    try:
        match = re.match(r'(.+?)\s*\((.+?)\)\s*(.+)', content)
        
        if not match:
            await ctx.send("âŒ Formato incorreto! Use: `!sendmessage #canal Mensagem (Nome do BotÃ£o) Texto da resposta`")
            return
        
        message_text = match.group(1).strip()
        button_label = match.group(2).strip()
        response_text = match.group(3).strip()
        
        view = DynamicButtonView(button_label, response_text)
        
        await channel.send(message_text, view=view)
        await ctx.send(f"âœ… Mensagem enviada em {channel.mention}!")
        
    except discord.Forbidden:
        await ctx.send(f"âŒ NÃ£o tenho permissÃ£o para enviar mensagens em {channel.mention}")
    except Exception as e:
        await ctx.send(f"âŒ Erro: {str(e)}")

token = os.getenv('DISCORD_BOT_TOKEN')
if not token:
    print("ERRO: Token do bot nÃ£o encontrado!")
    print("Por favor, configure a variÃ¡vel de ambiente DISCORD_BOT_TOKEN")
    exit(1)

bot.run(token)
